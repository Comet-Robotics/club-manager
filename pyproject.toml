[tool.ruff]
exclude = [
    ".direnv",
    ".git",
    ".git-rewrite",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "node_modules",
    "**/migrations/**",
]
line-length = 120
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
# TODO: later - set up linting and fix errors
ignore = ["ALL"]
# ignore = ["ISC001", "D203", "D103", "D213", "TRY003", "EM101", "ANN201", "D100", "D102", "D101", "D105", "ANN205", "DJ001", "D106", "D107", "ANN202", 'ANN002', 'ANN003Z']
# select = [
#     "ANN", # flake8-annotations
#     "ARG", # flake8-arguments
#     "B",   # flake8-bugbear
#     "C4",  # flake8-comprehensions
#     "C90", # mccabe complexity
#     "D",   # pydocstyle
#     "DJ",  # flake8-django
#     "DTZ", # flake8-datetimez
#     "E",   # pycodestyle
#     "EM",  # flake8-errmsg
#     "F",   # flake8
#     "G",   # flake8-logging-format
#     "I",   # isort
#     "ISC", # flake8-implicit-str-concat
#     "LOG", # flake8-logging
#     "N",   # pep8-naming
#     "PIE", # flake8-pie
#     "PT",  # flake8-pytest-style
#     "PTH", # flake8-use-pathlib
#     "RET", # flake8-return
#     "RUF", # ruff-specific rules
#     "Q",   # flake8-quotes
#     "SIM", # flake8-simplify
#     "T10", # flake8-print
#     "TCH", # flake8-type-checking
#     "TRY", # tryceratops
#     "UP",  # pyupgrade
# ]
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"


[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "ANN"]
"__init__.py" = ["D"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.pylint.'MESSAGES CONTROL']
max-line-length = 120
disable = ["fixme", "too-many-arguments"]
load-plugins = ["pylint_per_file_ignores", "pylint_django"]
django-settings-module = "clubManager.settings"
per-file-ignores = """
    /tests/:missing-function-docstring,assignment-from-no-return,not-context-manager,django-not-configured,imported-auth-user,missing-module-docstring
    /migrations/:invalid-name,missing-class-docstring,wrong-import-order
    models.py:too-many-ancestors
    manage.py:import-outside-toplevel
    """
    
[tool.mypy]
plugins = "mypy_django_plugin.main"
mypy_path = "./clubManager"

[tool.django-stubs]
django_settings_module = "clubManager.settings"
ignore_missing_model_attributes = true