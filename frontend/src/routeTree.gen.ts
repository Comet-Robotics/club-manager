/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as CombatEventsEventIdImport } from './routes/combat-events/$eventId'

// Create Virtual Routes

const StoreLazyImport = createFileRoute('/store')()
const LoginLazyImport = createFileRoute('/login')()
const CheckoutLazyImport = createFileRoute('/checkout')()
const AuthLazyImport = createFileRoute('/auth')()

// Create/Update Routes

const StoreLazyRoute = StoreLazyImport.update({
  path: '/store',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/store.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const CheckoutLazyRoute = CheckoutLazyImport.update({
  path: '/checkout',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/checkout.lazy').then((d) => d.Route))

const AuthLazyRoute = AuthLazyImport.update({
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth.lazy').then((d) => d.Route))

const CombatEventsEventIdRoute = CombatEventsEventIdImport.update({
  path: '/combat-events/$eventId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthLazyImport
      parentRoute: typeof rootRoute
    }
    '/checkout': {
      id: '/checkout'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof CheckoutLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/store': {
      id: '/store'
      path: '/store'
      fullPath: '/store'
      preLoaderRoute: typeof StoreLazyImport
      parentRoute: typeof rootRoute
    }
    '/combat-events/$eventId': {
      id: '/combat-events/$eventId'
      path: '/combat-events/$eventId'
      fullPath: '/combat-events/$eventId'
      preLoaderRoute: typeof CombatEventsEventIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/auth': typeof AuthLazyRoute
  '/checkout': typeof CheckoutLazyRoute
  '/login': typeof LoginLazyRoute
  '/store': typeof StoreLazyRoute
  '/combat-events/$eventId': typeof CombatEventsEventIdRoute
}

export interface FileRoutesByTo {
  '/auth': typeof AuthLazyRoute
  '/checkout': typeof CheckoutLazyRoute
  '/login': typeof LoginLazyRoute
  '/store': typeof StoreLazyRoute
  '/combat-events/$eventId': typeof CombatEventsEventIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/auth': typeof AuthLazyRoute
  '/checkout': typeof CheckoutLazyRoute
  '/login': typeof LoginLazyRoute
  '/store': typeof StoreLazyRoute
  '/combat-events/$eventId': typeof CombatEventsEventIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth'
    | '/checkout'
    | '/login'
    | '/store'
    | '/combat-events/$eventId'
  fileRoutesByTo: FileRoutesByTo
  to: '/auth' | '/checkout' | '/login' | '/store' | '/combat-events/$eventId'
  id:
    | '__root__'
    | '/auth'
    | '/checkout'
    | '/login'
    | '/store'
    | '/combat-events/$eventId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthLazyRoute: typeof AuthLazyRoute
  CheckoutLazyRoute: typeof CheckoutLazyRoute
  LoginLazyRoute: typeof LoginLazyRoute
  StoreLazyRoute: typeof StoreLazyRoute
  CombatEventsEventIdRoute: typeof CombatEventsEventIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthLazyRoute: AuthLazyRoute,
  CheckoutLazyRoute: CheckoutLazyRoute,
  LoginLazyRoute: LoginLazyRoute,
  StoreLazyRoute: StoreLazyRoute,
  CombatEventsEventIdRoute: CombatEventsEventIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/auth",
        "/checkout",
        "/login",
        "/store",
        "/combat-events/$eventId"
      ]
    },
    "/auth": {
      "filePath": "auth.lazy.tsx"
    },
    "/checkout": {
      "filePath": "checkout.lazy.tsx"
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/store": {
      "filePath": "store.lazy.tsx"
    },
    "/combat-events/$eventId": {
      "filePath": "combat-events/$eventId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
